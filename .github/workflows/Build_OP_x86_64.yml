name: Build_x86_64

on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  Build_x86_64:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf wget swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
    - name: Server Benchmark
      run: |
        wget -qO- --no-check-certificate https://raw.githubusercontent.com/Kurokosama/serverbench/main/bench.sh | bash
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        cd "/home/runner"
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sudo chown -R runner:runner "openwrt"
        cd "/home/runner/openwrt"
        sed -i '11s/#//' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Build_x86_64
      run: |
        cd "/home/runner/openwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/x86_64.config" ".config"
        chmod +x ./customize.sh && ./customize.sh
        make defconfig
        make -j$[$(nproc)+1]
        ls -al bin/targets/x86/64/

    - name: Prepare Files
      run: |
        cd "/home/runner/openwrt"
        mkdir -p /home/runner/openwrt/dist
        mv -f "bin/targets/x86/64/*" "/home/runner/openwrt/dist/"
        ls -al /home/runner/openwrt/dist/
    - name: Prepare Release Zip File
      id: assemble_artifact
      run: |
        release_tag="X86_64-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"
    - name: Upload Release Asset
      id: create_release_asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
        files: /home/runner/openwrt/dist/*
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release_asset.outputs.upload_url }}
    #     asset_path: /home/runner/openwrt/dist/openwrt-x86-64-generic-image.iso
    #     asset_name: openwrt-x86-64-generic-image.iso
    #     asset_content_type: application/zip
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-squashfs-combined.img
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-squashfs-combined.img
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-squashfs-combined-efi.img
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-squashfs-combined-efi.img
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-squashfs-combined.vmdk
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-squashfs-combined.vmdk
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-squashfs-combined-efi.vmdk
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-squashfs-combined-efi.vmdk
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-image.iso
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-image.iso
    - name: Upload OpenWrt Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-x86-64-generic-image-efi.iso
        path: /home/runner/openwrt/dist/openwrt-x86-64-generic-image-efi.iso
Cleanup-Old-Artifacts:
  needs: [Build_x86_64]
  runs-on: ubuntu-18.04
  steps:
  - name: Cleanup Old Action Artifacts
    uses: kolpav/purge-artifacts-action@v1
    with:
      token: ${{ github.token }}
      expire-in: 7d
Cleanup-Workflow-Runs:
  needs: Cleanup-Old-Artifacts
  runs-on: ubuntu-18.04
  steps:
    - name: Cleanup Workflow Runs
      uses: GitRML/delete-workflow-runs@v1.2.1
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 7   
